<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<parent>
		<groupId>com.celere</groupId>
		<artifactId>celere-content-video-v3</artifactId>
		<version>1.0.0.1-SNAPSHOT</version>
		<relativePath>../pom.xml</relativePath>
	</parent>
	<modelVersion>4.0.0</modelVersion>
	<artifactId>celere-content-services-video-v3</artifactId>
	<version>1.1.5.8-SNAPSHOT</version>
	<packaging>war</packaging>
	<properties>
		<serviceContextName>videoapi</serviceContextName>
		<serviceVersion>3.0</serviceVersion>
		<powermock.version>1.5</powermock.version>
		<isCanonical>false</isCanonical>
	</properties>
	<dependencies>
   <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-module-junit4</artifactId>
      <version>${powermock.version}</version>
      <scope>test</scope>
   </dependency>
   <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-api-mockito</artifactId>
      <version>${powermock.version}</version>
      <scope>test</scope>
   </dependency>
		<dependency>
			<groupId>com.celere</groupId>
			<artifactId>celere-content-elasticsearch-video-v3</artifactId>
			<version>1.1.3.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>com.celere</groupId>
			<artifactId>celere-content-services-common</artifactId>
			<version>1.1.0.4-RELEASE</version>
		</dependency>
		<dependency>
			<groupId>com.celere</groupId>
			<artifactId>celere-content-mongodb-core</artifactId>
			<version>1.1.0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-server</artifactId>
			<version>${jersey.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>asm</artifactId>
					<groupId>asm</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-client</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-servlet</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-json</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey.jersey-test-framework</groupId>
			<artifactId>jersey-test-framework-grizzly2</artifactId>
			<version>${jersey.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey.contribs</groupId>
			<artifactId>jersey-spring</artifactId>
			<version>${jersey.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-core</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-web</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-beans</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-context</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>
	<build>
		<finalName>${serviceContextName}</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>${maven.war.version}</version>
				<configuration>
					<webXml>src\main\resources\web.xml</webXml>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.sorc</groupId>
				<artifactId>sorc-env-tool</artifactId>
				<version>1.1.0.5-SNAPSHOT</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>generateConfigs</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<configurationProperties>
						<property>
							<name>mongo_servers</name>
							<value>#MONGO_SERVERS#</value>
						</property>
						<property>
							<name>elasticsearch_mtod_video_servers</name>
							<value>#ELASTIC_SEARCH_SERVER#</value>
						</property>
						<property>
							<name>elasticsearch_mtod_video_port</name>
							<value>#ELASTIC_SEARCH_SERVER_PORT#</value>
						</property>
						<property>
							<name>elasticsearch_sniff</name>
							<value>true</value>
						</property>
						<property>
							<name>mongo_options</name>
							<value>/?maxPoolSize=50&amp;amp;waitQueueMultiple=40&amp;connectTimeoutMS=5000&amp;socketTimeoutMS=10000&amp;readPreference=nearest</value>
						</property>
						<property>
							<name>mongo_security_database</name>
							<value>security</value>
						</property>
						<property>
							<name>mongo_security_collection</name>
							<value>partner</value>
						</property>
						<property>
							<name>mongo_default_number_of_retries</name>
							<value>#MONGO_RETRIES#</value>
						</property>
						<property>
							<name>mongo_default_wait_time</name>
							<value>#MONGO_WAIT_TIME#</value>
						</property>
						<property>
							<name>mongo_query_execution_time_warning_threshold</name>
							<value>1000</value>
						</property>
						<property>
							<name>mongo_socket_keep_alive</name>
							<value>true</value>
						</property>
						<property>
   							<name>security_enabled</name>
   							<value>#SECURITY_ENABLED#</value>
 						</property>
 						<property>
							<name>service_max_radius</name>
							<value>500</value>
						</property>
					</configurationProperties>
				</configuration>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.tomcat.maven</groupId>
					<artifactId>tomcat7-maven-plugin</artifactId>
					<version>2.1</version>
					<configuration>
						<url>http://${host}:${port}/manager/html</url>
						<server>mytomcat</server>
						<path>/${serviceContextName}/${serviceVersion}</path>
						<update>true</update>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>
